{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://chirpstack-provisioning.schemas/setup.json",
  "title": "ChirpStack Setup Configuration",
  "description": "Schema for provisioning ChirpStack infrastructure including tenants, device profiles, applications, integrations, and gateways. See schemas/ directory for base ChirpStack API schemas.",
  "type": "object",
  "properties": {
    "tenants": {
      "type": "array",
      "description": "List of tenants to create or update",
      "items": {
        "$ref": "#/$defs/Tenant"
      }
    }
  },
  "$defs": {
    "Tenant": {
      "type": "object",
      "description": "Tenant configuration. Based on schemas/Tenant.json with additional provisioning fields.",
      "properties": {
        "name": {
          "$ref": "#/$defs/nameField"
        },
        "*id": {
          "$ref": "#/$defs/autoGenField",
          "description": "Tenant ID (UUID). AUTO-GENERATED on create"
        },
        "description": {
          "$ref": "#/$defs/descriptionField"
        },
        "can_have_gateways": {
          "type": "boolean",
          "default": true
        },
        "max_gateway_count": {
          "$ref": "#/$defs/countField",
          "description": "Max gateway count (0 = unlimited)"
        },
        "max_device_count": {
          "$ref": "#/$defs/countField",
          "description": "Max device count (0 = unlimited)"
        },
        "private_gateways_up": {
          "type": "boolean",
          "default": false
        },
        "private_gateways_down": {
          "type": "boolean",
          "default": false
        },
        "tags": {
          "$ref": "#/$defs/tagsField"
        },
        "gateways": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Gateway"
          }
        },
        "applications": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Application"
          }
        },
        "_deviceProfiles": {
          "type": "array",
          "description": "Device profiles (underscore prefix indicates nested entity)",
          "items": {
            "$ref": "#/$defs/DeviceProfile"
          }
        }
      },
      "required": ["name"],
      "additionalProperties": false
    },
    "Gateway": {
      "type": "object",
      "description": "Gateway configuration. Based on schemas/Gateway.json with additional provisioning fields.",
      "properties": {
        "gateway_id": {
          "$ref": "#/$defs/euiField",
          "description": "Gateway ID (EUI64)"
        },
        "name": {
          "$ref": "#/$defs/nameField"
        },
        "description": {
          "$ref": "#/$defs/descriptionField"
        },
        "*tenant_id": {
          "$ref": "#/$defs/autoParentField",
          "description": "Tenant ID. AUTO-PARENT from parent tenant"
        },
        "tags": {
          "$ref": "#/$defs/tagsField"
        },
        "metadata": {
          "$ref": "#/$defs/metadataField"
        },
        "stats_interval": {
          "type": "integer",
          "minimum": 1,
          "maximum": 86400,
          "default": 30
        },
        "location": {
          "$ref": "#/$defs/Location"
        }
      },
      "required": ["gateway_id", "name"],
      "additionalProperties": false
    },
    "Location": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "type": "number",
          "minimum": -180,
          "maximum": 180
        },
        "altitude": {
          "type": "number"
        },
        "source": {
          "type": "string",
          "enum": ["UNKNOWN", "GPS", "CONFIG", "GEO_RESOLVER_TDOA", "GEO_RESOLVER_RSSI", "GEO_RESOLVER_GNSS", "GEO_RESOLVER_WIFI"]
        },
        "accuracy": {
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "Application": {
      "type": "object",
      "description": "Application configuration. Based on schemas/Application.json with additional provisioning fields.",
      "properties": {
        "name": {
          "$ref": "#/$defs/nameField"
        },
        "*id": {
          "$ref": "#/$defs/autoGenField",
          "description": "Application ID (UUID). AUTO-GENERATED on create"
        },
        "*tenant_id": {
          "$ref": "#/$defs/autoParentField",
          "description": "Tenant ID. AUTO-PARENT from parent tenant"
        },
        "description": {
          "$ref": "#/$defs/descriptionField"
        },
        "tags": {
          "$ref": "#/$defs/tagsField"
        },
        "_InfluxDbIntegration": {
          "$ref": "#/$defs/InfluxDbIntegration",
          "description": "InfluxDB integration (underscore prefix indicates integration)"
        }
      },
      "required": ["name"],
      "additionalProperties": false
    },
    "InfluxDbIntegration": {
      "type": "object",
      "description": "InfluxDB integration. Based on schemas/InfluxDbIntegration.json with env var support.",
      "properties": {
        "*application_id": {
          "$ref": "#/$defs/autoParentField",
          "description": "Application ID. AUTO-PARENT from parent application"
        },
        "version": {
          "type": "integer",
          "enum": [0, 1],
          "description": "InfluxDB version: 0=v1, 1=v2"
        },
        "endpoint": {
          "type": "string"
        },
        "endpoint_env_var": {
          "type": "string"
        },
        "bucket": {
          "type": "string"
        },
        "bucket_env_var": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "organization_env_var": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "token_env_var": {
          "type": "string"
        },
        "db": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "retention_policy_name": {
          "type": "string"
        },
        "precision": {
          "type": "string",
          "enum": ["NS", "U", "MS", "S", "M", "H"],
          "default": "NS"
        }
      },
      "required": ["version"],
      "additionalProperties": false
    },
    "DeviceProfile": {
      "type": "object",
      "description": "Device profile configuration. Based on schemas/DeviceProfile.json with simplified fields.",
      "properties": {
        "name": {
          "$ref": "#/$defs/nameField"
        },
        "*id": {
          "$ref": "#/$defs/autoGenField",
          "description": "Device profile ID (UUID). AUTO-GENERATED on create"
        },
        "*tenant_id": {
          "$ref": "#/$defs/autoParentField",
          "description": "Tenant ID. AUTO-PARENT from parent tenant"
        },
        "description": {
          "$ref": "#/$defs/descriptionField"
        },
        "region": {
          "$ref": "#/$defs/regionEnum"
        },
        "mac_version": {
          "$ref": "#/$defs/macVersionEnum"
        },
        "reg_params_revision": {
          "$ref": "#/$defs/regParamsEnum"
        },
        "supports_otaa": {
          "type": "boolean",
          "default": true
        },
        "supports_class_b": {
          "type": "boolean",
          "default": false
        },
        "supports_class_c": {
          "type": "boolean",
          "default": false
        },
        "adr_algorithm_id": {
          "type": "string",
          "default": "default"
        },
        "payload_codec_runtime": {
          "type": "string",
          "enum": ["NONE", "CAYENNE_LPP", "JS"],
          "default": "NONE"
        },
        "payload_codec_script": {
          "type": "string"
        },
        "payload_codec_script_path": {
          "type": "string"
        },
        "flush_queue_on_activate": {
          "type": "boolean",
          "default": false
        },
        "uplink_interval": {
          "type": "integer",
          "minimum": 0
        },
        "device_status_req_interval": {
          "type": "integer",
          "minimum": 0
        },
        "tags": {
          "$ref": "#/$defs/tagsField"
        },
        "auto_detect_measurements": {
          "type": "boolean",
          "default": true
        }
      },
      "required": ["name", "region", "mac_version", "reg_params_revision", "supports_otaa"],
      "additionalProperties": false
    },
    "nameField": {
      "type": "string",
      "minLength": 1,
      "maxLength": 100,
      "pattern": "^\\S.*\\S$|^\\S$",
      "description": "Name (1-100 chars, no leading/trailing whitespace)"
    },
    "descriptionField": {
      "type": "string",
      "maxLength": 500,
      "description": "Description (max 500 chars)"
    },
    "euiField": {
      "type": "string",
      "pattern": "^[0-9A-Fa-f]{16}$",
      "description": "EUI64 in hexadecimal (16 chars)"
    },
    "autoGenField": {
      "type": "string",
      "const": "AUTO-GENERATED"
    },
    "autoParentField": {
      "type": "string",
      "const": "AUTO-PARENT"
    },
    "countField": {
      "type": "integer",
      "minimum": 0,
      "default": 0
    },
    "tagsField": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "metadataField": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "regionEnum": {
      "type": "string",
      "enum": ["EU868", "US915", "CN779", "EU433", "AU915", "CN470", "AS923", "AS923_2", "AS923_3", "AS923_4", "KR920", "IN865", "RU864", "ISM2400"]
    },
    "macVersionEnum": {
      "type": "string",
      "enum": ["LORAWAN_1_0_0", "LORAWAN_1_0_1", "LORAWAN_1_0_2", "LORAWAN_1_0_3", "LORAWAN_1_0_4", "LORAWAN_1_1_0"]
    },
    "regParamsEnum": {
      "type": "string",
      "enum": ["A", "B", "RP002_1_0_0", "RP002_1_0_1", "RP002_1_0_2", "RP002_1_0_3", "RP002_1_0_4"]
    }
  }
}
